name: Deploy to VM using Docker Compose

on:
  push:
    branches:
      - main
      - stage-3

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Replace .env.development with .env in main.go
      run: sed -i '0,/\.env\.development/{s/\.env\.development/\.env/}' ./main.go

    - name: Prepare 1
      env:
        SECRETS_CONTEXT: ${{ toJson(secrets) }}
      run: |
        to_envs() {
          jq -r "to_entries[] | \"\(.key)=\(.value)\""
        }
        echo "$SECRETS_CONTEXT" | to_envs > .env
        echo "Secrets added to .env file."
        echo ".env in Prepare 1:"
        cat .env

    - name: Get the last 8 digits of the commit hash
      run: |
        DOCKER_TAG=$(git rev-parse --short=8 HEAD)
        echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
        echo "DOCKER_TAG=$DOCKER_TAG" >> .env
        echo "Using Docker tag: $DOCKER_TAG"

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and push (linux/amd64)
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile.multistage
        push: true
        tags: ranjabi/twitter-clone-backend:latest,ranjabi/twitter-clone-backend:${{ env.DOCKER_TAG }}
        platform: linux/amd64

    - name: Prepare 2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        password: ${{ secrets.VM_PASSWORD }}
        source: ".env,docker-compose.yml"
        target: /home

    - name: Deploy on VM
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USERNAME }}
        password: ${{ secrets.VM_PASSWORD }}
        script: |
          echo ".env in Prepare 2:"
          cd ../home
          cat docker-compose.yml
          cat .env
          echo "Stopping containers..."
          docker compose down
          echo "Starting containers..."
          docker compose pull && docker compose up --build -d
          echo "Containers status:"
          docker ps
